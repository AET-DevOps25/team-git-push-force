# Namespace configuration
# NOTE: The namespace must already exist. This chart will NOT create it.
namespace:
  name: "team-git-push-force-monitoring"

ingress:
  enabled: true
  className: "nginx"
  tls: true
  host: grafana.dev-aieventconcepter.student.k8s.aet.cit.tum.de
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Add any other required annotations here

grafana:
  image:
    repository: grafana/grafana
    tag: 10.1.5 # Use the latest stable version as needed
  adminUser: admin # Change for production
  adminPassword: strongpassword # Change for production
  service:
    type: ClusterIP
    port: 3000
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300m"
  persistence:
    enabled: true # Enable persistence for dashboards and configuration
    size: 5Gi
    storageClassName: "csi-rbd-sc"
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      searchNamespace: ALL
    datasources:
      enabled: true
      label: grafana_datasource
  rbac:
    create: false
  serviceAccount:
    create: false
  dashboards:
    default:
      timezone: "browser"
      refresh: "30s"
      time:
        from: "now-1h"
        to: "now"

prometheus:
  image:
    repository: prom/prometheus
    tag: v2.52.0 # Use the latest stable version as needed
  serviceAccount:
    create: false
    name: default
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  persistence:
    enabled: true # Enable persistence for historical metrics
    size: 10Gi
    storageClassName: "csi-rbd-sc"
  retention:
    time: "15d"
    size: "10GB"
  server:
    service:
      port: 9090
    rbac:
      create: false
    serviceAccount:
      create: false
  ingress:
    enabled: true
    className: "nginx"
    tls: true
    host: prometheus.dev-aieventconcepter.student.k8s.aet.cit.tum.de
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

# Node Exporter configuration
nodeExporter:
  enabled: true
  image:
    repository: prom/node-exporter
    tag: v1.6.1
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# cAdvisor configuration
cadvisor:
  enabled: true
  image:
    repository: gcr.io/cadvisor/cadvisor
    tag: v0.47.2
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "300m"

# PostgreSQL Exporter configuration
postgresExporter:
  enabled: true
  image:
    repository: prometheuscommunity/postgres-exporter
    tag: v0.15.0
  database:
    host: postgres
    port: 5432
    name: postgres
    user: postgres
    password: password
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# Alertmanager configuration
alertmanager:
  enabled: true
  image:
    repository: prom/alertmanager
    tag: v0.26.0
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  persistence:
    enabled: false # Disabled due to storage class issues
    size: 1Gi
    storageClassName: ""
  ingress:
    enabled: true
    className: "nginx"
    tls: true
    host: alertmanager.dev-aieventconcepter.student.k8s.aet.cit.tum.de
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
