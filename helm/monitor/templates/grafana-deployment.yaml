apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
    {{- include "monitoring.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        {{- include "monitoring.labels" . | nindent 8 }}
    spec:
      serviceAccountName: grafana
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      containers:
        - name: grafana
          image: {{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}
          ports:
            - containerPort: {{ .Values.grafana.service.port }}
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword | quote }}
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: grafana-storage
{{- if .Values.grafana.persistence.enabled }}
          persistentVolumeClaim:
            claimName: grafana-pvc
{{- else }}
          emptyDir: {}
{{- end }}
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards
{{- if .Values.grafana.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  labels:
    app: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.grafana.persistence.size }}
  {{- if .Values.grafana.persistence.storageClassName }}
  storageClassName: {{ .Values.grafana.persistence.storageClassName }}
  {{- end }}
{{- end }} 