name: Deploy to Staging Kubernetes

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build_images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [client, gateway, user-svc, concept-svc, genai-svc]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Install Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.service }}
          tags: |
            type=raw,value=pr-${{ github.event.pull_request.number }},enable=${{ github.event_name == 'pull_request' }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' }}

      - name: Generate API code from OpenAPI specs
        run: bash api/scripts/gen-all.sh

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build_images
    environment:
      name: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Run Helm Upgrade
        run: |
          cd helm/ai-event-concepter
          helm upgrade --install ai-event-concepter . \
            --namespace team-git-push-force-dev \
            --create-namespace \
            --set ingress.host=dev-aieventconcepter.student.k8s.aet.cit.tum.de \
            --set client.image.tag=pr-${{ github.event.pull_request.number || github.sha }} \
            --set gateway.image.tag=pr-${{ github.event.pull_request.number || github.sha }} \
            --set usersvc.image.tag=pr-${{ github.event.pull_request.number || github.sha }} \
            --set conceptsvc.image.tag=pr-${{ github.event.pull_request.number || github.sha }} \
            --set genaisvc.image.tag=pr-${{ github.event.pull_request.number || github.sha }}

      - name: Rollout Restart Deployments
        run: |
          kubectl rollout restart deployment -n team-git-push-force-dev
