name: API Validation

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'
  pull_request:
    paths:
      - 'api/**'

jobs:
  lint-openapi:
    name: Lint OpenAPI Specifications
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Redocly CLI
        run: npm install -g @redocly/cli@latest

      - name: Lint OpenAPI Specifications
        run: |
          redocly lint api/*.yaml --format summary

  generate-code:
    name: Generate Code from OpenAPI
    runs-on: ubuntu-latest
    needs: lint-openapi
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install OpenAPI Generator
        run: |
          npm install -g @openapitools/openapi-generator-cli
          pip install openapi-python-client

      - name: Generate Code
        run: |
          chmod +x api/scripts/gen-all.sh
          ./api/scripts/gen-all.sh

      - name: Check for Changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Fail if Generated Code is Out of Date
        if: steps.git-check.outputs.changes == 'true' && github.event_name == 'pull_request'
        run: |
          echo "::error::Generated code is out of date. Please run ./api/scripts/gen-all.sh locally and commit the changes."
          exit 1

  contract-tests:
    name: Run Contract Tests
    runs-on: ubuntu-latest
    needs: generate-code
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Pact CLI
        run: |
          docker pull pactfoundation/pact-cli:latest

      - name: Run Pact Tests
        run: |
          # This is a placeholder for actual Pact tests
          # In a real implementation, you would run Pact tests here
          echo "Running contract tests with Pact..."
          # Example:
          # cd client && npm install && npm run test:pact
          # docker run --rm -v $(pwd)/pacts:/pacts pactfoundation/pact-cli:latest publish /pacts --broker-base-url=$PACT_BROKER_URL --broker-token=$PACT_BROKER_TOKEN

  build-docs:
    name: Build API Documentation
    runs-on: ubuntu-latest
    needs: lint-openapi
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Redoc CLI
        run: npm install -g redoc-cli

      - name: Build Documentation
        run: |
          mkdir -p docs/api
          for spec in api/*.yaml; do
            filename=$(basename "$spec" .yaml)
            redoc-cli bundle "$spec" -o "docs/api/$filename.html"
          done

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
          branch: gh-pages
