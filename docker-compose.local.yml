services:
  # Client service (Angular frontend with hot reload)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.local
      cache_from:
        - node:22-alpine
    ports:
      - "3000:4200"
    volumes:
      - ./client:/app
      - client_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - NG_CLI_ANALYTICS=false
    depends_on:
      - gateway
    networks:
      - frontend-network
    command: ng serve --configuration=development --host 0.0.0.0 --port 4200 --poll 2000

  # API Gateway (Spring Boot)
  gateway:
    build:
      context: ./gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_MAIN_WEB_APPLICATION_TYPE=reactive
      - USER_SERVICE_URL=http://user-svc:8080
      - CONCEPT_SERVICE_URL=http://concept-svc:8080
      - GENAI_SERVICE_URL=http://genai-svc:8083
    depends_on:
      - user-svc
      - concept-svc
      - genai-svc
    networks:
      - frontend-network
      - service-network

  # User Service (Spring Boot)
  user-svc:
    build:
      context: ./user-svc
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-svc-db:5432/eventdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
    networks:
      - service-network
      - user-db-network
    depends_on:
      - user-svc-db

  user-svc-db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=eventdb
    networks:
      - user-db-network
    volumes:
      - user_db_data_local:/var/lib/postgresql/data

  # Concept Service (Spring Boot)
  concept-svc:
    build:
      context: ./concept-svc
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://concept-svc-db:5432/conceptdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
    networks:
      - service-network
      - concept-db-network
    depends_on:
      - concept-svc-db

  concept-svc-db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=conceptdb
    networks:
      - concept-db-network
    volumes:
      - concept_db_data_local:/var/lib/postgresql/data

  # GenAI Service (Python Flask)
  genai-svc:
    build:
      context: ./genai-svc
    ports:
      - "8083:8083"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - WEAVIATE_URL=http://genai-svc-weaviate:8080
      - WEAVIATE_GRPC_PORT=50051
      - WEAVIATE_API_KEY=${WEAVIATE_API_KEY:-}
      - MINIO_URL=http://genai-svc-minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=concepts
      - CONCEPT_SERVICE_URL=http://concept-svc:8080
      - OPENWEBUI_MODEL=llama3.3:latest
    depends_on:
      - genai-svc-weaviate
      - genai-svc-minio
      - concept-svc
    networks:
      - service-network
      - genai-network
    env_file:
      - genai-svc/prod/.env
    volumes:
      - ./genai-svc:/app
      - /app/__pycache__

  # Weaviate Vector Database for GenAI Service
  genai-svc-weaviate:
    image: semitechnologies/weaviate:1.30.5
    ports:
      - "8087:8080"
      - "50051:50051"
    environment:
      - QUERY_DEFAULTS_LIMIT=20
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - ENABLE_MODULES=text2vec-transformers
      - TRANSFORMERS_INFERENCE_API=http://genai-svc-t2v-transformers:8080
      - CLUSTER_HOSTNAME=genai-svc-weaviate
      - RAFT_BOOTSTRAP_EXPECT=1
    volumes:
      - weaviate_data_local:/var/lib/weaviate
    networks:
      - genai-network

  # Text2Vec Transformers for Weaviate
  genai-svc-t2v-transformers:
    image: semitechnologies/transformers-inference:sentence-transformers-all-MiniLM-L6-v2
    environment:
      - ENABLE_CUDA=0
    networks:
      - genai-network

  # MinIO Object Storage for GenAI Service
  genai-svc-minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data_local:/data
    networks:
      - genai-network

networks:
  frontend-network:
    driver: bridge
  service-network:
    driver: bridge
  user-db-network:
    driver: bridge
  concept-db-network:
    driver: bridge
  genai-network:
    driver: bridge

volumes:
  weaviate_data_local:
    driver: local
  minio_data_local:
    driver: local
  user_db_data_local:
    driver: local
  concept_db_data_local:
    driver: local
  client_node_modules:
    driver: local 